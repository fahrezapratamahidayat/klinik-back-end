"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.UpdateEncounterSchema = void 0;
const client_1 = require("@prisma/client");
const zod_1 = require("zod");
// Skema validasi untuk Anamnesis
const AnamnesisSchema = zod_1.z.object({
    chiefComplaint: zod_1.z.string().optional(),
    durationOfComplaint: zod_1.z.string().optional(),
    locationOfComplaint: zod_1.z.string().optional(),
    currentIllnessHistory: zod_1.z.string().optional(),
    pastMedicalHistory: zod_1.z.string().optional(),
    familyMedicalHistory: zod_1.z.string().optional(),
    drugAllergyHistory: zod_1.z.string().optional(),
    foodAllergyHistory: zod_1.z.string().optional(),
    otherAllergyHistory: zod_1.z.string().optional(),
    medicationHistory: zod_1.z.string().optional(),
    currentMedications: zod_1.z.string().optional(),
    surgicalHistory: zod_1.z.string().optional(),
    smoking: zod_1.z.boolean().optional(),
    cigarettesPerDay: zod_1.z.number().int().optional(),
    alcohol: zod_1.z.boolean().optional(),
    alcoholFrequency: zod_1.z.string().optional(),
    exercise: zod_1.z.string().optional(),
    exerciseFrequency: zod_1.z.string().optional(),
    menarche: zod_1.z.number().int().optional(),
    menstrualCycle: zod_1.z.string().optional(),
    menstruationDuration: zod_1.z.number().int().optional(),
    lastMenstrualPeriod: zod_1.z.string().optional(),
    parity: zod_1.z.string().optional(),
    gestationalAge: zod_1.z.number().int().optional(),
    fetalMovement: zod_1.z.string().optional(),
    pregnancyComplications: zod_1.z.string().optional(),
    deliveryHistory: zod_1.z.string().optional(),
    immunizationHistory: zod_1.z.string().optional(),
    dietPattern: zod_1.z.string().optional(),
    specialDiet: zod_1.z.string().optional(),
    sleepPattern: zod_1.z.string().optional(),
    sleepDuration: zod_1.z.number().int().optional(),
    urinationPattern: zod_1.z.string().optional(),
    defecationPattern: zod_1.z.string().optional(),
    additionalInformation: zod_1.z.string().optional(),
});
// Skema validasi untuk PhysicalExamination
const PhysicalExaminationSchema = zod_1.z.object({
    bloodPressureSystolic: zod_1.z.number().int().optional(),
    bloodPressureDiastolic: zod_1.z.number().int().optional(),
    bodyTemperature: zod_1.z.number().optional(),
    heartRate: zod_1.z.number().int().optional(),
    respiratoryRate: zod_1.z.number().int().optional(),
    levelOfConsciousness: zod_1.z.string().optional(),
    head: zod_1.z.string().optional(),
    eyes: zod_1.z.string().optional(),
    ears: zod_1.z.string().optional(),
    nose: zod_1.z.string().optional(),
    mouth: zod_1.z.string().optional(),
    throat: zod_1.z.string().optional(),
    neck: zod_1.z.string().optional(),
    chest: zod_1.z.string().optional(),
    lungs: zod_1.z.string().optional(),
    heart: zod_1.z.string().optional(),
    abdomen: zod_1.z.string().optional(),
    extremities: zod_1.z.string().optional(),
    skin: zod_1.z.string().optional(),
    neurological: zod_1.z.string().optional(),
    height: zod_1.z.number().optional(),
    weight: zod_1.z.number().optional(),
    bodySurfaceArea: zod_1.z.number().optional(),
    note: zod_1.z.string().optional(),
    effectiveDateTime: zod_1.z.string().datetime(),
});
const PsychologicalExaminationSchema = zod_1.z.object({
    mood: zod_1.z.string().optional(),
    affect: zod_1.z.string().optional(),
    behavior: zod_1.z.string().optional(),
    thoughtContent: zod_1.z.string().optional(),
    thoughtProcess: zod_1.z.string().optional(),
    perception: zod_1.z.string().optional(),
    cognition: zod_1.z.string().optional(),
    insight: zod_1.z.string().optional(),
    judgment: zod_1.z.string().optional(),
    memory: zod_1.z.string().optional(),
    attention: zod_1.z.string().optional(),
    concentration: zod_1.z.string().optional(),
    orientation: zod_1.z.string().optional(),
    speech: zod_1.z.string().optional(),
    psychomotorActivity: zod_1.z.string().optional(),
    suicidalIdeation: zod_1.z.string().optional(),
    homicidalIdeation: zod_1.z.string().optional(),
    substanceUse: zod_1.z.string().optional(),
    copingMechanisms: zod_1.z.string().optional(),
    socialSupport: zod_1.z.string().optional(),
    stressLevel: zod_1.z.string().optional(),
    sleepPattern: zod_1.z.string().optional(),
    appetite: zod_1.z.string().optional(),
    energyLevel: zod_1.z.string().optional(),
    anxietyLevel: zod_1.z.string().optional(),
    depressionScreening: zod_1.z.string().optional(),
    other: zod_1.z.string().optional(),
    interpretasi: zod_1.z.string().optional(),
    note: zod_1.z.string().optional(),
    effectiveDateTime: zod_1.z.string().datetime(),
});
const PrescriptionSchema = zod_1.z.object({
    medicineId: zod_1.z.string(),
    quantity: zod_1.z.number().int(),
    dosage: zod_1.z.string(),
    route: zod_1.z.string(),
    frequency: zod_1.z.string(),
    duration: zod_1.z.number().int(),
    notes: zod_1.z.string().optional(),
    status: zod_1.z.nativeEnum(client_1.PrescriptionStatus).optional(),
    dispensedAt: zod_1.z.string().datetime().optional(),
    dispensedBy: zod_1.z.string().optional(),
});
const DiagnosisSchema = zod_1.z.object({
    icd10Id: zod_1.z.number(),
    type: zod_1.z.nativeEnum(client_1.DiagnosisType),
    notes: zod_1.z.string().optional(),
});
const ProcedureSchema = zod_1.z.object({
    icd9Id: zod_1.z.number(),
    notes: zod_1.z.string().optional(),
    performedAt: zod_1.z.string().datetime(),
    performedBy: zod_1.z.string(),
});
// Skema validasi utama untuk pembaruan encounter
exports.UpdateEncounterSchema = zod_1.z.object({
    status: zod_1.z.nativeEnum(client_1.EncounterStatus).optional(),
    endDate: zod_1.z.string().datetime().optional(),
    treatmentPlan: zod_1.z.string().optional(),
    notes: zod_1.z.string().optional(),
    anamnesis: AnamnesisSchema.optional(),
    physicalExamination: PhysicalExaminationSchema.optional(),
    psychologicalExamination: PsychologicalExaminationSchema.optional(),
    prescriptions: PrescriptionSchema.array().optional(),
    diagnosis: DiagnosisSchema.array().optional(),
    procedure: ProcedureSchema.array().optional(),
});
